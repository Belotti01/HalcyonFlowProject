@inherits BaseComponent<Form<TItem>>
@typeparam TItem

<RadzenTemplateForm class="tw-flex-col tw-space-y-2" TItem=@TItem Data=@Item Submit=@OnSubmit InvalidSubmit=@OnInvalidSubmit>
    @ChildContent

    <!--	BUTTONS		-->
	<div class="tw-flex tw-mt-2">
		<!--	SAVE BUTTON		-->
		<RadzenButton class="tw-basis-1/6 tw-mr-1" ButtonStyle=@ButtonStyle.Secondary Text=@Translate("Save") Click=@(x => Close(true))/>
		<!--	CANCEL BUTTON		-->
		<RadzenButton class="tw-basis-1/6 tw-ml-1" ButtonStyle=@ButtonStyle.Light Text=@Translate("Cancel") Click=@(x => Close(false))/>
	</div>
</RadzenTemplateForm>

@code {
	[Parameter]
	public RenderFragment? ChildContent { get; set; }
	[Parameter, Required]
	public TItem Item { get; set; } = default!;
	[Parameter]
	public EventCallback<TItem> OnSubmit { get; set; } = default!;
	[Parameter]
	public EventCallback<FormInvalidSubmitEventArgs> OnInvalidSubmit { get; set; } = default!;
	[Parameter]
	public EventCallback OnCancel { get; set; } = default!;
	[Parameter]
	public bool IsDialog { get; set; } = false;

	protected async Task Close(bool save) {
		if(save && OnSubmit.HasDelegate) {
			await OnSubmit.InvokeAsync();
		}
		if(IsDialog) {
			DialogService?.Close();
		}
	}

}
